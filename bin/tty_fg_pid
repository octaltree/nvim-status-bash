#!/usr/bin/env bash

# Returns status code
function is_foreground_group(){
    local pid=$1
    local stat=$(ps aux | awk "\$2 == \"${pid}\" { print \$8 }")
    echo $stat| grep '+' > /dev/null 2>&1
}

# Returns stdout
function ppid(){
    local pid=$1
    ps -ef | awk "\$2 == \"${pid}\" { print \$3 }"
}

function filter_foregroupd_group(){
  local pids="$1"
  for pid in `echo "$pids"`; do
    if is_foreground_group $pid; then
      echo $pid
    fi
  done
}

function find_not_child(){
  local pids="$1"
  for i in `echo "$pids"`; do
    local found=0
    local ppid=`ppid $i`
    for j in `echo "$pids"`; do
      if [ "$ppid" = "$j" ]; then
        found=1
      fi
    done
    if [ $found -eq 0 ]; then
      echo $i
    fi
  done
}

function args_help(){
  local help=0
  local e=0
  if [ $# -lt 1 ]; then help=1; e=1; fi
  for i in $@; do if [ $i = '-h' ] || [ $i = '--help' ]; then help=1; fi done
  if [ $help -eq 0 ]; then return; fi
  echo "Usage: $0 {tty}"
  echo "Outputs the foreground process pid"
  echo "  {tty} is, for example, pts/4"
  exit $e
}

function main(){
  args_help $*
  local tty="$1"
  local candidates=`pgrep -t ${tty}`
  local fgs=`filter_foregroupd_group "$candidates"`
  find_not_child "$fgs"
}

main $*
